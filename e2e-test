#!/usr/bin/env bash

# poor man's end-to-end test for s3

export AWS_ACCESS_KEY_ID="${RANDOM}"
export AWS_SECRET_ACCESS_KEY="${RANDOM}${RANDOM}"
export MINIO_ACCESS_KEY="${AWS_ACCESS_KEY_ID}"
export MINIO_SECRET_KEY="${AWS_SECRET_ACCESS_KEY}"

NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)

e2e_path="/tmp/.aws-micro_e2etest_tmp"
storage_path="${e2e_path}/storage-for-minio"

fail_and_exit() {
  echo "${RED}Test failed!${NORMAL}"
  exit 1
}

# cleanup previous failed runs
pkill -f "minio --quiet server --address :19999 ${storage_path}"
rm -rf "${storage_path}"

# init
mkdir -p "${storage_path}"
./build-single-executable "${e2e_path}/aws-micro"
nix-shell -p minio --run "minio --quiet server --address :19999 ${storage_path} > /dev/null" &
sleep 3 # minio needs some time to start up

# s3api create-bucket
"${e2e_path}/aws-micro" s3api create-bucket --endpoint-url http://127.0.0.1:19999 --bucket test-bucket || fail_and_exit

# s3 cp <LocalPath> <S3Uri>
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 cp aws-micro s3://test-bucket/ > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 cp aws-micro s3://test-bucket/ --content-type foo/bar > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 cp aws-micro s3://test-bucket/ --no-guess-mime-type > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 cp aws-micro s3://test-bucket/ --acl private > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 cp aws-micro s3://test-bucket/ --storage-class STANDARD > /dev/null || fail_and_exit
# s3 cp <S3Uri> <LocalPath>
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 cp s3://test-bucket/aws-micro ${e2e_path}/.aws-micro > /dev/null || fail_and_exit
cmp --silent aws-micro ${e2e_path}/.aws-micro || fail_and_exit
"${e2e_path}/aws-micro" s3 cp --no-sign-request s3://landsat-pds/robots.txt "${e2e_path}/robots.txt" | grep -q 'download: s3://landsat-pds/robots.txt to /tmp/.aws-micro_e2etest_tmp/robots.txt' || fail_and_exit
# s3 ls
"${e2e_path}/aws-micro" --endpoint-url http://127.0.0.1:19999 s3 ls | grep test-bucket > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 ls s3://test-bucket/ | grep aws-micro > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 --endpoint-url http://127.0.0.1:19999 ls test-bucket/ | grep aws-micro > /dev/null || fail_and_exit
"${e2e_path}/aws-micro" s3 ls --no-sign-request landsat-pds | grep robots.txt > /dev/null || fail_and_exit

# cleanup
pkill -f "minio --quiet server --address :19999 ${storage_path}"
rm -r "${storage_path}"

echo "${GREEN}Tests run successfully!${NORMAL}"
