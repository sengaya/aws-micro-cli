name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run shellcheck
        run: ./build-single-executable aws-micro-release && shellcheck aws-micro-release
  test-on-vm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, macos-13, macos-12, macos-11]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install BATS
        run: "[[ -f /home/linuxbrew/.linuxbrew/bin/brew ]] && eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\" || true ;  [[ -f /usr/local/bin/bats ]] && brew unlink bats || true ; brew install bats-core"
      - name: Run BATS tests
        run: "[[ -f /home/linuxbrew/.linuxbrew/bin/brew ]] && eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\" || true ; bats tests/"
  test-on-container-debian-ubuntu:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        container: ["ubuntu:22.04", "ubuntu:20.04", "ubuntu:18.04", "debian:12-slim", "debian:11-slim", "debian:10-slim"]
    steps:
      - name: Check out code
        # use v3 for glibc compatibility with ubuntu:18.04
        uses: actions/checkout@v3
      - name: Install dependencies and BATS
        run: "apt-get update && apt-get install -y openssl curl file bats xxd"
      - name: Run BATS tests
        run: bats tests/
  test-on-container-alpine:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        container: ["alpine:edge", "alpine:3.18", "alpine:3.17", "alpine:3.16", "alpine:3.15"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install dependencies and BATS
        run: "apk add --no-cache bash openssl curl file bats"
      - name: Run BATS tests
        run: bats tests/
  test-on-container-rocky:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        container: ["rockylinux:9-minimal", "rockylinux:8-minimal"]
    steps:
      - name: Install BATS
        # vim-common contains xxd
        run: |
          microdnf install -y perl file openssl tar gzip vim-common && \
            curl -L https://kojipkgs.fedoraproject.org//packages/parallel/20220322/2.fc37/noarch/parallel-20220322-2.fc37.noarch.rpm -o /tmp/parallel.rpm && \
            curl -L https://kojipkgs.fedoraproject.org//packages/bats/1.7.0/2.fc37/noarch/bats-1.7.0-2.fc37.noarch.rpm -o /tmp/bats.rpm && \
            rpm -i /tmp/parallel.rpm /tmp/bats.rpm
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run BATS tests
        run: bats tests/
